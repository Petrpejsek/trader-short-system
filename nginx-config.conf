# 🌐 NGINX KONFIGURACE PRO PRODUCTION
# Optimalizováno pro Next.js aplikace s SSL, rate limiting, a security headers
# Umístění: /etc/nginx/sites-available/trader-app

# Upstream definice pro Node.js aplikaci
upstream nodejs_backend {
    # IP hash pro session persistence (pokud potřeba)
    ip_hash;
    
    # Node.js instance - upravte porty podle potřeby
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s weight=1;
    # server 127.0.0.1:3001 max_fails=3 fail_timeout=30s weight=1; # Pro load balancing
    
    # Keepalive connections pro lepší výkon
    keepalive 32;
}

# Rate limiting zóny
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # Certbot ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # Redirect všech HTTP požadavků na HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Hlavní HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL certifikáty (automaticky generované Certbotem)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # SSL optimalizace
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Základní konfigurace
    root /var/www/trader-app/current/public;
    index index.html index.htm;
    
    # Logging
    access_log /var/log/nginx/trader-app.access.log main;
    error_log /var/log/nginx/trader-app.error.log;
    
    # Client upload limits
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings pro Node.js
    proxy_http_version 1.1;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # ===============================
    # STATIC ASSETS
    # ===============================
    
    # Next.js static assets
    location /_next/static/ {
        alias /var/www/trader-app/current/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Gzip pro JS/CSS soubory
        gzip_static on;
        gzip_types text/css application/javascript;
        
        # Rate limiting pro static assets
        limit_req zone=static burst=50 nodelay;
    }
    
    # Public static files
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        try_files $uri =404;
    }
    
    # CSS, JS, fonts
    location ~* \.(css|js|woff|woff2|eot|ttf|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        gzip_static on;
        try_files $uri =404;
    }
    
    # Robots.txt, sitemap.xml
    location ~* \.(txt|xml)$ {
        expires 1h;
        add_header Cache-Control "public";
        try_files $uri =404;
    }
    
    # ===============================
    # API ROUTES
    # ===============================
    
    # API endpoints s rate limitingem
    location /api/ {
        # Strict rate limiting pro API
        limit_req zone=api burst=10 nodelay;
        
        # CORS headers pro API
        add_header Access-Control-Allow-Origin "https://your-domain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = OPTIONS) {
            return 204;
        }
        
        proxy_pass http://nodejs_backend;
    }
    
    # Autentifikační endpointy s extra přísným rate limitingem
    location ~* /api/(auth|login|register|password-reset) {
        limit_req zone=auth burst=3 nodelay;
        
        # Extra security headers
        add_header X-Frame-Options "DENY" always;
        
        proxy_pass http://nodejs_backend;
    }
    
    # WebSocket support
    location /socket.io/ {
        proxy_pass http://nodejs_backend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }
    
    # ===============================
    # HEALTH CHECKS
    # ===============================
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Nginx status (pouze pro monitoring systémy)
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        allow ::1;
        deny all;
        access_log off;
    }
    
    # ===============================
    # SECURITY
    # ===============================
    
    # Blokování přístupu k citlivým souborům
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~* \.(env|log|sql|conf|config)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Blokování common exploit pokusů
    location ~* \.(php|asp|aspx|jsp)$ {
        return 444;
    }
    
    # Blokování PHP info pokusů
    location ~* /phpinfo {
        return 444;
    }
    
    # Blokování admin pokusů
    location ~* /(admin|wp-admin|administrator) {
        return 444;
    }
    
    # ===============================
    # MAIN APPLICATION
    # ===============================
    
    # Next.js aplikace - všechny ostatní požadavky
    location / {
        # General rate limiting
        limit_req zone=general burst=20 nodelay;
        
        # Try static files first, pak proxy na Node.js
        try_files $uri $uri/ @nodejs;
    }
    
    # Fallback na Node.js server
    location @nodejs {
        proxy_pass http://nodejs_backend;
    }
    
    # ===============================
    # ERROR PAGES
    # ===============================
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /var/www/html;
        internal;
    }
    
    location = /50x.html {
        root /var/www/html;
        internal;
    }
    
    # Rate limit error page
    error_page 429 /429.html;
    location = /429.html {
        root /var/www/html;
        internal;
    }
}

# ===============================
# MONITORING & ADMIN (OPTIONAL)
# ===============================

# Admin interface (pouze pro monitoring)
server {
    listen 8080;
    server_name 127.0.0.1;
    
    # Pouze lokální přístup
    allow 127.0.0.1;
    allow ::1;
    deny all;
    
    location / {
        return 200 "Admin interface - implementujte podle potřeby";
        add_header Content-Type text/plain;
    }
    
    # PM2 monitoring endpoint
    location /pm2 {
        proxy_pass http://127.0.0.1:9615; # PM2 web interface port
    }
}
